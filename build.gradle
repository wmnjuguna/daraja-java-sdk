/*
 * Daraja Java SDK - Build Configuration
 *
 * Java SDK for integrating with Safaricom Daraja API using OpenFeign
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.wmnjuguna'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    // OpenFeign for declarative REST clients
    api 'io.github.openfeign:feign-core:13.5'
    api 'io.github.openfeign:feign-jackson:13.5'
    api 'io.github.openfeign:feign-slf4j:13.5'

    // Jackson for JSON processing
    api 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    api 'com.fasterxml.jackson.core:jackson-core:2.18.2'

    // Logging facade
    api 'org.slf4j:slf4j-api:2.0.17'

    // Testing dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0'
    testImplementation 'org.mockito:mockito-core:5.15.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.15.2'
    testImplementation 'ch.qos.logback:logback-classic:1.5.15'
    testImplementation 'org.wiremock:wiremock:3.13.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = false
    }
}

tasks.named('compileJava') {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
}

tasks.named('compileTestJava') {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
}

tasks.named('javadoc') {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.named('jar') {
    manifest {
        attributes(
            'Implementation-Title': 'Daraja Java SDK',
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'io.github.wmnjuguna'
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Daraja Java SDK'
                description = 'Java SDK for integrating with Safaricom Daraja API using OpenFeign'
                url = 'https://github.com/wmnjuguna/daraja-java-sdk'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'wmnjuguna'
                        name = 'Wilfred Njuguna'
                        email = 'mwangiwilly395@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/wmnjuguna/daraja-java-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:wmnjuguna/daraja-java-sdk.git'
                    url = 'httpshttps://github.com/wmnjuguna/daraja-java-sdk/tree/main'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    useInMemoryPgpKeys(
         System.getenv("GPG_PRIVATE_KEY"),
         System.getenv("GPG_PASSPHRASE")
    )
}
